#!/usr/bin/env perl
use strict;
use warnings;

# genTests generates test c files from specified template source files
#
# INDIR specifies where to find the source files
# OUTDIR specifies where to place the generate files
# SRCDIR specifies where to find the files being tested

# set preferences, constants
use open qw<:encoding(UTF-8)>;
my $READ_ONLY = "<";
my $WRITE_ONLY = ">";

# read directory arguments, write boilerplate to main and it's imports
if (@ARGV < 3) {
  print STDERR "Usage: genTests INDIR OUTDIR SRCDIR [FILE]...\n";
  exit;
}
my $INDIR = shift;
my $OUTDIR = shift;
my $SRCDIR = shift;
my $MAIN_C = "$OUTDIR/main.gen.c";
my $TEST_H = "$OUTDIR/test.gen.h";
my $mainHandle;
my $testHandle;
open($mainHandle, $WRITE_ONLY, $MAIN_C)
    or die "$0: can't open $MAIN_C: $!";
open($testHandle, $WRITE_ONLY, $TEST_H)
    or die "$0: can't open $TEST_H: $!";
print $mainHandle
'#include <stdio.h>
#include "test.gen.h"

void runTest(unsigned int id, char* name, testFunction test) {
  unsigned int failureLine = test();
  if (failureLine) {
    printf("   #%02d [FAILED] \"%s\" at line %d\n", id, name, failureLine);
  } else {
    printf(" + #%02d [PASSED] \"%s\"\n", id, name);
  }
}

int main(void) {
';
print $testHandle
'#ifndef _TEST_GEN_H_
#define _TEST_GEN_H_

typedef unsigned int (*testFunction)(void);
void runTest(unsigned int, char*, testFunction);

';

# parse files
foreach (@ARGV) {
  my $readFile = $_;
  if (not $readFile =~ /$INDIR\/(.*).test.c$/) {
    warn "$0: $readFile not template test file";
    next;
  }
  my $basename = $1;
  my $writeFile = "$basename.gen.c";

  my $readHandle;
  open($readHandle, $READ_ONLY, "$readFile")
      or die "$0: can't open $readFile: $!";

  my $writeHandle;
  open($writeHandle, $WRITE_ONLY, "$OUTDIR/$writeFile")
      or die "$0: can't open $OUTDIR/$writeFile: $!";
  print $writeHandle "#include \"$SRCDIR/$basename.h\"\n";
  print $mainHandle "  printf(\"$basename tests\\n\");\n";

  print "Generating $OUTDIR/$writeFile\n";
  my $testCount = 0;
  my $lineNumber = 0;
  while (<$readHandle>) {
    $lineNumber++;
    if (/^TEST\("(.*?)"\)(.*)/) {
      $testCount++;
      my $testName = lc "${basename}__$1";
      $testName =~ tr/ /_/;
      print $writeHandle "unsigned int $testName()$2\n";
      print $testHandle "unsigned int $testName(void);\n";
      print $mainHandle "    runTest($testCount, \"$1\", $testName);\n";
    } else {
      s/PASS\(\);/return 0;/;
      s/EXPECT\((.*)\);/if (!($1)) return $lineNumber;/;
      print $writeHandle $_;
    }
  }
  close $readHandle;
  close $writeHandle;
}

# clean up
print $mainHandle
'  return 0;
}
';
close $mainHandle;

print $testHandle
'
#endif // _TEST_GEN_H_
';
close $testHandle;
